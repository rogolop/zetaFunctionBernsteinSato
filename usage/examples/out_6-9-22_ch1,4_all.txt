Semigroup: [ 6, 9, 22 ]
Possible undeformed equations in space:
Equation 1 options:
[
    -u0^3 + u1^2
]
Equation 2 options:
[
    -u0^2*u1^6 + u2^3,
    -u0^5*u1^4 + u2^3,
    -u0^8*u1^2 + u2^3,
    -u0^11 + u2^3
]
Chosen equation indexes: [ 1, 4 ]
Chosen equations:
[
    -u0^3 + u1^2,
    -u0^11 + u2^3
]

############################################################
############################################################

g = 2
R =
    Graded Polynomial ring of rank 3 over Rational Field
    Order: Grevlex with weights [6, 9, 22]
    Variables: u0, u1, u2
    Variable weights: [6, 9, 22]
ZZ =
    Integer Ring
Ei =
    [ 6, 3, 1 ]
Ni =
    [ 0, 2, 3 ]
nB =
    [ -18, -66 ]

M =
    Free Embedded Module R^2 with grading [-18, -66]
    Order: Module TOP with column weights [-18, -66]: Grevlex with weights [6, 
    9, 22]
N =
    Embedded Submodule of R^2 with grading [-18, -66]
    Order: Module TOP with column weights [-18, -66]: Grevlex with weights [6, 
    9, 22]
    Basis:
    [ -u0^3 + u1^2,             0],
    [            0,  -u0^3 + u1^2],
    [-u0^11 + u2^3,             0],
    [            0, -u0^11 + u2^3]
J =
    [  -3*u0^2 -11*u0^10]
    [     2*u1         0]
    [        0    3*u2^2]
T_1 =
    Embedded Submodule of R^2 with grading [-18, -66]
    Order: Module TOP with column weights [-18, -66]: Grevlex with weights [6, 
    9, 22]
    Basis:
    [ -u0^3 + u1^2,             0],
    [            0,  -u0^3 + u1^2],
    [-u0^11 + u2^3,             0],
    [            0, -u0^11 + u2^3],
    [      -3*u0^2,     -11*u0^10],
    [         2*u1,             0],
    [            0,        3*u2^2]

T_1 =
    Embedded Submodule of R^2 with grading [-18, -66]
    Order: Module TOP with column weights [-18, -66]: Grevlex with weights [6, 
    9, 22]
    Groebner basis:
    [       u2^3,           0],
    [  u0^2*u2^2,           0],
    [          0,        u1^8],
    [       u0^3,           0],
    [  3/11*u0^2,     u0*u1^6],
    [         u1,           0],
    [          0,        u2^2],
    [          0, u0^3 - u1^2]
LT =
    [
    [u2^3, 0],
    [u0^2*u2^2, 0],
    [0, u1^8],
    [u0^3, 0],
    [0, u0*u1^6],
    [u1, 0],
    [0, u2^2],
    [0, u0^3]
    ]


### for loop -> step 1 of 2
LT_i =
    Ideal of Graded Polynomial ring of rank 3 over Rational Field
    Order: Grevlex with weights [6, 9, 22]
    Variables: u0, u1, u2
    Variable weights: [6, 9, 22]
    Homogeneous
    Basis:
    [
    u2^3,
    u0^2*u2^2,
    u0^3,
    u1
    ]
M_i =
    [
    [1, 0],
    [u0, 0],
    [u0^2, 0],
    [u2, 0],
    [u0*u2, 0],
    [u0^2*u2, 0],
    [u2^2, 0],
    [u0*u2^2, 0]
    ]
D_mu =
    [
    [u2, 0],
    [u0*u2, 0],
    [u0^2*u2, 0],
    [u2^2, 0],
    [u0*u2^2, 0]
    ]

### for loop -> step 2 of 2
LT_i =
    Ideal of Graded Polynomial ring of rank 3 over Rational Field
    Order: Grevlex with weights [6, 9, 22]
    Variables: u0, u1, u2
    Variable weights: [6, 9, 22]
    Homogeneous
    Basis:
    [
    u1^8,
    u0*u1^6,
    u2^2,
    u0^3
    ]
M_i =
    [
    [0, 1],
    [0, u0],
    [0, u1],
    [0, u0^2],
    [0, u0*u1],
    [0, u1^2],
    [0, u0^2*u1],
    [0, u2],
    [0, u0*u1^2],
    [0, u1^3],
    [0, u0*u2],
    [0, u0^2*u1^2],
    [0, u1*u2],
    [0, u0*u1^3],
    [0, u0^2*u2],
    [0, u1^4],
    [0, u0*u1*u2],
    [0, u0^2*u1^3],
    [0, u1^2*u2],
    [0, u0*u1^4],
    [0, u0^2*u1*u2],
    [0, u1^5],
    [0, u0*u1^2*u2],
    [0, u0^2*u1^4],
    [0, u1^3*u2],
    [0, u0*u1^5],
    [0, u0^2*u1^2*u2],
    [0, u1^6],
    [0, u0*u1^3*u2],
    [0, u0^2*u1^5],
    [0, u1^4*u2],
    [0, u0^2*u1^3*u2],
    [0, u1^7],
    [0, u0*u1^4*u2],
    [0, u1^5*u2],
    [0, u0^2*u1^4*u2],
    [0, u0*u1^5*u2],
    [0, u1^6*u2],
    [0, u0^2*u1^5*u2],
    [0, u1^7*u2]
    ]
D_mu =
    [
    [u2, 0],
    [u0*u2, 0],
    [u0^2*u2, 0],
    [u2^2, 0],
    [u0*u2^2, 0],
    [0, u1^5*u2],
    [0, u0^2*u1^4*u2],
    [0, u0*u1^5*u2],
    [0, u1^6*u2],
    [0, u0^2*u1^5*u2],
    [0, u1^7*u2]
    ]
D_mu =
    [
    [u2, 0],
    [u0*u2, 0],
    [u0^2*u2, 0],
    [u2^2, 0],
    [u0*u2^2, 0],
    [0, u1^5*u2],
    [0, u0^2*u1^4*u2],
    [0, u0*u1^5*u2],
    [0, u1^6*u2],
    [0, u0^2*u1^5*u2],
    [0, u1^7*u2]
    ]

RR =
    Localization of polynomial ring of rank 14 over Rational Field
    Order: Local Graded Lexicographical
    Variables: t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, u0, u1, u2
phi =
    Mapping from: RngMPol: R to RngMPolLoc: RR
II =
    [
    u1^2 - u0^3,
    u2^3 - u0^11
    ]


### for loop -> step 1 of 11
e_i =
    1
II =
    [
    u1^2 + t0*u2 - u0^3,
    u2^3 - u0^11
    ]

### for loop -> step 2 of 11
e_i =
    1
II =
    [
    u1^2 + t0*u2 - u0^3 + t1*u0*u2,
    u2^3 - u0^11
    ]

### for loop -> step 3 of 11
e_i =
    1
II =
    [
    u1^2 + t0*u2 - u0^3 + t1*u0*u2 + t2*u0^2*u2,
    u2^3 - u0^11
    ]

### for loop -> step 4 of 11
e_i =
    1
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t2*u0^2*u2,
    u2^3 - u0^11
    ]

### for loop -> step 5 of 11
e_i =
    1
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 - u0^11
    ]

### for loop -> step 6 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 - u0^11
    ]

### for loop -> step 7 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t6*u0^2*u1^4*u2 - u0^11
    ]

### for loop -> step 8 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t7*u0*u1^5*u2 + t6*u0^2*u1^4*u2 - u0^11
    ]

### for loop -> step 9 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t8*u1^6*u2 + t7*u0*u1^5*u2 + t6*u0^2*u1^4*u2 - u0^11
    ]

### for loop -> step 10 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t8*u1^6*u2 + t7*u0*u1^5*u2 + t6*u0^2*u1^4*u2 + 
    t9*u0^2*u1^5*u2 - u0^11
    ]

### for loop -> step 11 of 11
e_i =
    2
II =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t8*u1^6*u2 + t7*u0*u1^5*u2 + t6*u0^2*u1^4*u2 + 
    t10*u1^7*u2 + t9*u0^2*u1^5*u2 - u0^11
    ]

############################################################
############################################################

Deformation =
    [
    u1^2 + t0*u2 - u0^3 + t3*u2^2 + t1*u0*u2 + t4*u0*u2^2 + t2*u0^2*u2,
    u2^3 + t5*u1^5*u2 + t8*u1^6*u2 + t7*u0*u1^5*u2 + t6*u0^2*u1^4*u2 + 
    t10*u1^7*u2 + t9*u0^2*u1^5*u2 - u0^11
    ]
PDeformation =
    Localization of polynomial ring of rank 14 over Rational Field
    Order: Local Graded Lexicographical
    Variables: t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, u0, u1, u2
Parameters:
    Optional at E1: [ 1, 2, 3, 4 ]
    Optional at E2: [ 5, 6, 7, 8, 9, 10 ]
    Needed at E1: 0
Chosen parameters: [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 ]
Chosen deformation:
[
    -u0^3 + u1^2 + t0*u2 + t1*u0*u2 + t2*u0^2*u2 + t3*u2^2 + t4*u0*u2^2,
    -u0^11 + t6*u0^2*u1^4*u2 + t5*u1^5*u2 + t7*u0*u1^5*u2 + t9*u0^2*u1^5*u2 + 
        t8*u1^6*u2 + t10*u1^7*u2 + u2^3
]
I =
    Ideal of Polynomial ring of rank 14 over Rational Field
    Order: Lexicographical
    Variables: t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, u0, u1, u2
    Basis:
    [
    t0*u2 + t1*u0*u2 + t2*u0^2*u2 + t3*u2^2 + t4*u0*u2^2 - u0^3 + u1^2,
    t5*u1^5*u2 + t6*u0^2*u1^4*u2 + t7*u0*u1^5*u2 + t8*u1^6*u2 + t9*u0^2*u1^5*u2 
    + t10*u1^7*u2 - u0^11 + u2^3
    ]
J =
    Ideal of Polynomial ring of rank 14 over Rational Field
    Order: Lexicographical
    Variables: t0, t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, u0, u1, u2
    Basis:
    [
    t0^3*u0^11 + 3*t0^2*t1*u0^12 + 3*t0^2*t2*u0^13 - t0^2*t5*u0^3*u1^5 + 
    t0^2*t5*u1^7 - t0^2*t6*u0^5*u1^4 + t0^2*t6*u0^2*u1^6 - t0^2*t7*u0^4*u1^5 + 
    t0^2*t7*u0*u1^7 - t0^2*t8*u0^3*u1^6 + t0^2*t8*u1^8 - t0^2*t9*u0^5*u1^5 + 
    t0^2*t9*u0^2*u1^7 - t0^2*t10*u0^3*u1^7 + t0^2*t10*u1^9 + 3*t0*t1^2*u0^13 + 
    6*t0*t1*t2*u0^14 - 2*t0*t1*t5*u0^4*u1^5 + 2*t0*t1*t5*u0*u1^7 - 
    2*t0*t1*t6*u0^6*u1^4 + 2*t0*t1*t6*u0^3*u1^6 - 2*t0*t1*t7*u0^5*u1^5 + 
    2*t0*t1*t7*u0^2*u1^7 - 2*t0*t1*t8*u0^4*u1^6 + 2*t0*t1*t8*u0*u1^8 - 
    2*t0*t1*t9*u0^6*u1^5 + 2*t0*t1*t9*u0^3*u1^7 - 2*t0*t1*t10*u0^4*u1^7 + 
    2*t0*t1*t10*u0*u1^9 + 3*t0*t2^2*u0^15 - 2*t0*t2*t5*u0^5*u1^5 + 
    2*t0*t2*t5*u0^2*u1^7 - 2*t0*t2*t6*u0^7*u1^4 + 2*t0*t2*t6*u0^4*u1^6 - 
    2*t0*t2*t7*u0^6*u1^5 + 2*t0*t2*t7*u0^3*u1^7 - 2*t0*t2*t8*u0^5*u1^6 + 
    2*t0*t2*t8*u0^2*u1^8 - 2*t0*t2*t9*u0^7*u1^5 + 2*t0*t2*t9*u0^4*u1^7 - 
    2*t0*t2*t10*u0^5*u1^7 + 2*t0*t2*t10*u0^2*u1^9 + t0*t3^2*t5*u0^11*u1^5 + 
    t0*t3^2*t6*u0^13*u1^4 + t0*t3^2*t7*u0^12*u1^5 + t0*t3^2*t8*u0^11*u1^6 + 
    t0*t3^2*t9*u0^13*u1^5 + t0*t3^2*t10*u0^11*u1^7 + 2*t0*t3*t4*t5*u0^12*u1^5 + 
    2*t0*t3*t4*t6*u0^14*u1^4 + 2*t0*t3*t4*t7*u0^13*u1^5 + 
    2*t0*t3*t4*t8*u0^12*u1^6 + 2*t0*t3*t4*t9*u0^14*u1^5 + 
    2*t0*t3*t4*t10*u0^12*u1^7 + 3*t0*t3*u0^14 - 3*t0*t3*u0^11*u1^2 + 
    t0*t4^2*t5*u0^13*u1^5 + t0*t4^2*t6*u0^15*u1^4 + t0*t4^2*t7*u0^14*u1^5 + 
    t0*t4^2*t8*u0^13*u1^6 + t0*t4^2*t9*u0^15*u1^5 + t0*t4^2*t10*u0^13*u1^7 + 
    3*t0*t4*u0^15 - 3*t0*t4*u0^12*u1^2 + t1^3*u0^14 + 3*t1^2*t2*u0^15 - 
    t1^2*t5*u0^5*u1^5 + t1^2*t5*u0^2*u1^7 - t1^2*t6*u0^7*u1^4 + 
    t1^2*t6*u0^4*u1^6 - t1^2*t7*u0^6*u1^5 + t1^2*t7*u0^3*u1^7 - 
    t1^2*t8*u0^5*u1^6 + t1^2*t8*u0^2*u1^8 - t1^2*t9*u0^7*u1^5 + 
    t1^2*t9*u0^4*u1^7 - t1^2*t10*u0^5*u1^7 + t1^2*t10*u0^2*u1^9 + 
    3*t1*t2^2*u0^16 - 2*t1*t2*t5*u0^6*u1^5 + 2*t1*t2*t5*u0^3*u1^7 - 
    2*t1*t2*t6*u0^8*u1^4 + 2*t1*t2*t6*u0^5*u1^6 - 2*t1*t2*t7*u0^7*u1^5 + 
    2*t1*t2*t7*u0^4*u1^7 - 2*t1*t2*t8*u0^6*u1^6 + 2*t1*t2*t8*u0^3*u1^8 - 
    2*t1*t2*t9*u0^8*u1^5 + 2*t1*t2*t9*u0^5*u1^7 - 2*t1*t2*t10*u0^6*u1^7 + 
    2*t1*t2*t10*u0^3*u1^9 + t1*t3^2*t5*u0^12*u1^5 + t1*t3^2*t6*u0^14*u1^4 + 
    t1*t3^2*t7*u0^13*u1^5 + t1*t3^2*t8*u0^12*u1^6 + t1*t3^2*t9*u0^14*u1^5 + 
    t1*t3^2*t10*u0^12*u1^7 + 2*t1*t3*t4*t5*u0^13*u1^5 + 2*t1*t3*t4*t6*u0^15*u1^4
    + 2*t1*t3*t4*t7*u0^14*u1^5 + 2*t1*t3*t4*t8*u0^13*u1^6 + 
    2*t1*t3*t4*t9*u0^15*u1^5 + 2*t1*t3*t4*t10*u0^13*u1^7 + 3*t1*t3*u0^15 - 
    3*t1*t3*u0^12*u1^2 + t1*t4^2*t5*u0^14*u1^5 + t1*t4^2*t6*u0^16*u1^4 + 
    t1*t4^2*t7*u0^15*u1^5 + t1*t4^2*t8*u0^14*u1^6 + t1*t4^2*t9*u0^16*u1^5 + 
    t1*t4^2*t10*u0^14*u1^7 + 3*t1*t4*u0^16 - 3*t1*t4*u0^13*u1^2 + t2^3*u0^17 - 
    t2^2*t5*u0^7*u1^5 + t2^2*t5*u0^4*u1^7 - t2^2*t6*u0^9*u1^4 + 
    t2^2*t6*u0^6*u1^6 - t2^2*t7*u0^8*u1^5 + t2^2*t7*u0^5*u1^7 - 
    t2^2*t8*u0^7*u1^6 + t2^2*t8*u0^4*u1^8 - t2^2*t9*u0^9*u1^5 + 
    t2^2*t9*u0^6*u1^7 - t2^2*t10*u0^7*u1^7 + t2^2*t10*u0^4*u1^9 + 
    t2*t3^2*t5*u0^13*u1^5 + t2*t3^2*t6*u0^15*u1^4 + t2*t3^2*t7*u0^14*u1^5 + 
    t2*t3^2*t8*u0^13*u1^6 + t2*t3^2*t9*u0^15*u1^5 + t2*t3^2*t10*u0^13*u1^7 + 
    2*t2*t3*t4*t5*u0^14*u1^5 + 2*t2*t3*t4*t6*u0^16*u1^4 + 
    2*t2*t3*t4*t7*u0^15*u1^5 + 2*t2*t3*t4*t8*u0^14*u1^6 + 
    2*t2*t3*t4*t9*u0^16*u1^5 + 2*t2*t3*t4*t10*u0^14*u1^7 + 3*t2*t3*u0^16 - 
    3*t2*t3*u0^13*u1^2 + t2*t4^2*t5*u0^15*u1^5 + t2*t4^2*t6*u0^17*u1^4 + 
    t2*t4^2*t7*u0^16*u1^5 + t2*t4^2*t8*u0^15*u1^6 + t2*t4^2*t9*u0^17*u1^5 + 
    t2*t4^2*t10*u0^15*u1^7 + 3*t2*t4*u0^17 - 3*t2*t4*u0^14*u1^2 + t3^3*u0^22 + 
    3*t3^2*t4*u0^23 - t3^2*t5^2*u0^3*u1^10 + t3^2*t5^2*u1^12 - 
    2*t3^2*t5*t6*u0^5*u1^9 + 2*t3^2*t5*t6*u0^2*u1^11 - 2*t3^2*t5*t7*u0^4*u1^10 +
    2*t3^2*t5*t7*u0*u1^12 - 2*t3^2*t5*t8*u0^3*u1^11 + 2*t3^2*t5*t8*u1^13 - 
    2*t3^2*t5*t9*u0^5*u1^10 + 2*t3^2*t5*t9*u0^2*u1^12 - 2*t3^2*t5*t10*u0^3*u1^12
    + 2*t3^2*t5*t10*u1^14 - t3^2*t6^2*u0^7*u1^8 + t3^2*t6^2*u0^4*u1^10 - 
    2*t3^2*t6*t7*u0^6*u1^9 + 2*t3^2*t6*t7*u0^3*u1^11 - 2*t3^2*t6*t8*u0^5*u1^10 +
    2*t3^2*t6*t8*u0^2*u1^12 - 2*t3^2*t6*t9*u0^7*u1^9 + 2*t3^2*t6*t9*u0^4*u1^11 -
    2*t3^2*t6*t10*u0^5*u1^11 + 2*t3^2*t6*t10*u0^2*u1^13 - t3^2*t7^2*u0^5*u1^10 +
    t3^2*t7^2*u0^2*u1^12 - 2*t3^2*t7*t8*u0^4*u1^11 + 2*t3^2*t7*t8*u0*u1^13 - 
    2*t3^2*t7*t9*u0^6*u1^10 + 2*t3^2*t7*t9*u0^3*u1^12 - 2*t3^2*t7*t10*u0^4*u1^12
    + 2*t3^2*t7*t10*u0*u1^14 - t3^2*t8^2*u0^3*u1^12 + t3^2*t8^2*u1^14 - 
    2*t3^2*t8*t9*u0^5*u1^11 + 2*t3^2*t8*t9*u0^2*u1^13 - 2*t3^2*t8*t10*u0^3*u1^13
    + 2*t3^2*t8*t10*u1^15 - t3^2*t9^2*u0^7*u1^10 + t3^2*t9^2*u0^4*u1^12 - 
    2*t3^2*t9*t10*u0^5*u1^12 + 2*t3^2*t9*t10*u0^2*u1^14 - t3^2*t10^2*u0^3*u1^14 
    + t3^2*t10^2*u1^16 + 3*t3*t4^2*u0^24 - 2*t3*t4*t5^2*u0^4*u1^10 + 
    2*t3*t4*t5^2*u0*u1^12 - 4*t3*t4*t5*t6*u0^6*u1^9 + 4*t3*t4*t5*t6*u0^3*u1^11 -
    4*t3*t4*t5*t7*u0^5*u1^10 + 4*t3*t4*t5*t7*u0^2*u1^12 - 
    4*t3*t4*t5*t8*u0^4*u1^11 + 4*t3*t4*t5*t8*u0*u1^13 - 4*t3*t4*t5*t9*u0^6*u1^10
    + 4*t3*t4*t5*t9*u0^3*u1^12 - 4*t3*t4*t5*t10*u0^4*u1^12 + 
    4*t3*t4*t5*t10*u0*u1^14 - 2*t3*t4*t6^2*u0^8*u1^8 + 2*t3*t4*t6^2*u0^5*u1^10 -
    4*t3*t4*t6*t7*u0^7*u1^9 + 4*t3*t4*t6*t7*u0^4*u1^11 - 
    4*t3*t4*t6*t8*u0^6*u1^10 + 4*t3*t4*t6*t8*u0^3*u1^12 - 
    4*t3*t4*t6*t9*u0^8*u1^9 + 4*t3*t4*t6*t9*u0^5*u1^11 - 
    4*t3*t4*t6*t10*u0^6*u1^11 + 4*t3*t4*t6*t10*u0^3*u1^13 - 
    2*t3*t4*t7^2*u0^6*u1^10 + 2*t3*t4*t7^2*u0^3*u1^12 - 4*t3*t4*t7*t8*u0^5*u1^11
    + 4*t3*t4*t7*t8*u0^2*u1^13 - 4*t3*t4*t7*t9*u0^7*u1^10 + 
    4*t3*t4*t7*t9*u0^4*u1^12 - 4*t3*t4*t7*t10*u0^5*u1^12 + 
    4*t3*t4*t7*t10*u0^2*u1^14 - 2*t3*t4*t8^2*u0^4*u1^12 + 2*t3*t4*t8^2*u0*u1^14 
    - 4*t3*t4*t8*t9*u0^6*u1^11 + 4*t3*t4*t8*t9*u0^3*u1^13 - 
    4*t3*t4*t8*t10*u0^4*u1^13 + 4*t3*t4*t8*t10*u0*u1^15 - 
    2*t3*t4*t9^2*u0^8*u1^10 + 2*t3*t4*t9^2*u0^5*u1^12 - 
    4*t3*t4*t9*t10*u0^6*u1^12 + 4*t3*t4*t9*t10*u0^3*u1^14 - 
    2*t3*t4*t10^2*u0^4*u1^14 + 2*t3*t4*t10^2*u0*u1^16 - 2*t3*t5*u0^6*u1^5 + 
    4*t3*t5*u0^3*u1^7 - 2*t3*t5*u1^9 - 2*t3*t6*u0^8*u1^4 + 4*t3*t6*u0^5*u1^6 - 
    2*t3*t6*u0^2*u1^8 - 2*t3*t7*u0^7*u1^5 + 4*t3*t7*u0^4*u1^7 - 2*t3*t7*u0*u1^9 
    - 2*t3*t8*u0^6*u1^6 + 4*t3*t8*u0^3*u1^8 - 2*t3*t8*u1^10 - 2*t3*t9*u0^8*u1^5 
    + 4*t3*t9*u0^5*u1^7 - 2*t3*t9*u0^2*u1^9 - 2*t3*t10*u0^6*u1^7 + 
    4*t3*t10*u0^3*u1^9 - 2*t3*t10*u1^11 + t4^3*u0^25 - t4^2*t5^2*u0^5*u1^10 + 
    t4^2*t5^2*u0^2*u1^12 - 2*t4^2*t5*t6*u0^7*u1^9 + 2*t4^2*t5*t6*u0^4*u1^11 - 
    2*t4^2*t5*t7*u0^6*u1^10 + 2*t4^2*t5*t7*u0^3*u1^12 - 2*t4^2*t5*t8*u0^5*u1^11 
    + 2*t4^2*t5*t8*u0^2*u1^13 - 2*t4^2*t5*t9*u0^7*u1^10 + 
    2*t4^2*t5*t9*u0^4*u1^12 - 2*t4^2*t5*t10*u0^5*u1^12 + 
    2*t4^2*t5*t10*u0^2*u1^14 - t4^2*t6^2*u0^9*u1^8 + t4^2*t6^2*u0^6*u1^10 - 
    2*t4^2*t6*t7*u0^8*u1^9 + 2*t4^2*t6*t7*u0^5*u1^11 - 2*t4^2*t6*t8*u0^7*u1^10 +
    2*t4^2*t6*t8*u0^4*u1^12 - 2*t4^2*t6*t9*u0^9*u1^9 + 2*t4^2*t6*t9*u0^6*u1^11 -
    2*t4^2*t6*t10*u0^7*u1^11 + 2*t4^2*t6*t10*u0^4*u1^13 - t4^2*t7^2*u0^7*u1^10 +
    t4^2*t7^2*u0^4*u1^12 - 2*t4^2*t7*t8*u0^6*u1^11 + 2*t4^2*t7*t8*u0^3*u1^13 - 
    2*t4^2*t7*t9*u0^8*u1^10 + 2*t4^2*t7*t9*u0^5*u1^12 - 2*t4^2*t7*t10*u0^6*u1^12
    + 2*t4^2*t7*t10*u0^3*u1^14 - t4^2*t8^2*u0^5*u1^12 + t4^2*t8^2*u0^2*u1^14 - 
    2*t4^2*t8*t9*u0^7*u1^11 + 2*t4^2*t8*t9*u0^4*u1^13 - 2*t4^2*t8*t10*u0^5*u1^13
    + 2*t4^2*t8*t10*u0^2*u1^15 - t4^2*t9^2*u0^9*u1^10 + t4^2*t9^2*u0^6*u1^12 - 
    2*t4^2*t9*t10*u0^7*u1^12 + 2*t4^2*t9*t10*u0^4*u1^14 - t4^2*t10^2*u0^5*u1^14 
    + t4^2*t10^2*u0^2*u1^16 - 2*t4*t5*u0^7*u1^5 + 4*t4*t5*u0^4*u1^7 - 
    2*t4*t5*u0*u1^9 - 2*t4*t6*u0^9*u1^4 + 4*t4*t6*u0^6*u1^6 - 2*t4*t6*u0^3*u1^8 
    - 2*t4*t7*u0^8*u1^5 + 4*t4*t7*u0^5*u1^7 - 2*t4*t7*u0^2*u1^9 - 
    2*t4*t8*u0^7*u1^6 + 4*t4*t8*u0^4*u1^8 - 2*t4*t8*u0*u1^10 - 2*t4*t9*u0^9*u1^5
    + 4*t4*t9*u0^6*u1^7 - 2*t4*t9*u0^3*u1^9 - 2*t4*t10*u0^7*u1^7 + 
    4*t4*t10*u0^4*u1^9 - 2*t4*t10*u0*u1^11 - u0^9 + 3*u0^6*u1^2 - 3*u0^3*u1^4 + 
    u1^6
    ]
ff = t0^3*u0^11 + 3*t0^2*t1*u0^12 + 3*t0^2*t2*u0^13 - t0^2*t5*u0^3*u1^5 + 
t0^2*t5*u1^7 - t0^2*t6*u0^5*u1^4 + t0^2*t6*u0^2*u1^6 - t0^2*t7*u0^4*u1^5 + 
t0^2*t7*u0*u1^7 - t0^2*t8*u0^3*u1^6 + t0^2*t8*u1^8 - t0^2*t9*u0^5*u1^5 + 
t0^2*t9*u0^2*u1^7 - t0^2*t10*u0^3*u1^7 + t0^2*t10*u1^9 + 3*t0*t1^2*u0^13 + 
6*t0*t1*t2*u0^14 - 2*t0*t1*t5*u0^4*u1^5 + 2*t0*t1*t5*u0*u1^7 - 
2*t0*t1*t6*u0^6*u1^4 + 2*t0*t1*t6*u0^3*u1^6 - 2*t0*t1*t7*u0^5*u1^5 + 
2*t0*t1*t7*u0^2*u1^7 - 2*t0*t1*t8*u0^4*u1^6 + 2*t0*t1*t8*u0*u1^8 - 
2*t0*t1*t9*u0^6*u1^5 + 2*t0*t1*t9*u0^3*u1^7 - 2*t0*t1*t10*u0^4*u1^7 + 
2*t0*t1*t10*u0*u1^9 + 3*t0*t2^2*u0^15 - 2*t0*t2*t5*u0^5*u1^5 + 
2*t0*t2*t5*u0^2*u1^7 - 2*t0*t2*t6*u0^7*u1^4 + 2*t0*t2*t6*u0^4*u1^6 - 
2*t0*t2*t7*u0^6*u1^5 + 2*t0*t2*t7*u0^3*u1^7 - 2*t0*t2*t8*u0^5*u1^6 + 
2*t0*t2*t8*u0^2*u1^8 - 2*t0*t2*t9*u0^7*u1^5 + 2*t0*t2*t9*u0^4*u1^7 - 
2*t0*t2*t10*u0^5*u1^7 + 2*t0*t2*t10*u0^2*u1^9 + t0*t3^2*t5*u0^11*u1^5 + 
t0*t3^2*t6*u0^13*u1^4 + t0*t3^2*t7*u0^12*u1^5 + t0*t3^2*t8*u0^11*u1^6 + 
t0*t3^2*t9*u0^13*u1^5 + t0*t3^2*t10*u0^11*u1^7 + 2*t0*t3*t4*t5*u0^12*u1^5 + 
2*t0*t3*t4*t6*u0^14*u1^4 + 2*t0*t3*t4*t7*u0^13*u1^5 + 2*t0*t3*t4*t8*u0^12*u1^6 +
2*t0*t3*t4*t9*u0^14*u1^5 + 2*t0*t3*t4*t10*u0^12*u1^7 + 3*t0*t3*u0^14 - 
3*t0*t3*u0^11*u1^2 + t0*t4^2*t5*u0^13*u1^5 + t0*t4^2*t6*u0^15*u1^4 + 
t0*t4^2*t7*u0^14*u1^5 + t0*t4^2*t8*u0^13*u1^6 + t0*t4^2*t9*u0^15*u1^5 + 
t0*t4^2*t10*u0^13*u1^7 + 3*t0*t4*u0^15 - 3*t0*t4*u0^12*u1^2 + t1^3*u0^14 + 
3*t1^2*t2*u0^15 - t1^2*t5*u0^5*u1^5 + t1^2*t5*u0^2*u1^7 - t1^2*t6*u0^7*u1^4 + 
t1^2*t6*u0^4*u1^6 - t1^2*t7*u0^6*u1^5 + t1^2*t7*u0^3*u1^7 - t1^2*t8*u0^5*u1^6 + 
t1^2*t8*u0^2*u1^8 - t1^2*t9*u0^7*u1^5 + t1^2*t9*u0^4*u1^7 - t1^2*t10*u0^5*u1^7 +
t1^2*t10*u0^2*u1^9 + 3*t1*t2^2*u0^16 - 2*t1*t2*t5*u0^6*u1^5 + 
2*t1*t2*t5*u0^3*u1^7 - 2*t1*t2*t6*u0^8*u1^4 + 2*t1*t2*t6*u0^5*u1^6 - 
2*t1*t2*t7*u0^7*u1^5 + 2*t1*t2*t7*u0^4*u1^7 - 2*t1*t2*t8*u0^6*u1^6 + 
2*t1*t2*t8*u0^3*u1^8 - 2*t1*t2*t9*u0^8*u1^5 + 2*t1*t2*t9*u0^5*u1^7 - 
2*t1*t2*t10*u0^6*u1^7 + 2*t1*t2*t10*u0^3*u1^9 + t1*t3^2*t5*u0^12*u1^5 + 
t1*t3^2*t6*u0^14*u1^4 + t1*t3^2*t7*u0^13*u1^5 + t1*t3^2*t8*u0^12*u1^6 + 
t1*t3^2*t9*u0^14*u1^5 + t1*t3^2*t10*u0^12*u1^7 + 2*t1*t3*t4*t5*u0^13*u1^5 + 
2*t1*t3*t4*t6*u0^15*u1^4 + 2*t1*t3*t4*t7*u0^14*u1^5 + 2*t1*t3*t4*t8*u0^13*u1^6 +
2*t1*t3*t4*t9*u0^15*u1^5 + 2*t1*t3*t4*t10*u0^13*u1^7 + 3*t1*t3*u0^15 - 
3*t1*t3*u0^12*u1^2 + t1*t4^2*t5*u0^14*u1^5 + t1*t4^2*t6*u0^16*u1^4 + 
t1*t4^2*t7*u0^15*u1^5 + t1*t4^2*t8*u0^14*u1^6 + t1*t4^2*t9*u0^16*u1^5 + 
t1*t4^2*t10*u0^14*u1^7 + 3*t1*t4*u0^16 - 3*t1*t4*u0^13*u1^2 + t2^3*u0^17 - 
t2^2*t5*u0^7*u1^5 + t2^2*t5*u0^4*u1^7 - t2^2*t6*u0^9*u1^4 + t2^2*t6*u0^6*u1^6 - 
t2^2*t7*u0^8*u1^5 + t2^2*t7*u0^5*u1^7 - t2^2*t8*u0^7*u1^6 + t2^2*t8*u0^4*u1^8 - 
t2^2*t9*u0^9*u1^5 + t2^2*t9*u0^6*u1^7 - t2^2*t10*u0^7*u1^7 + t2^2*t10*u0^4*u1^9 
+ t2*t3^2*t5*u0^13*u1^5 + t2*t3^2*t6*u0^15*u1^4 + t2*t3^2*t7*u0^14*u1^5 + 
t2*t3^2*t8*u0^13*u1^6 + t2*t3^2*t9*u0^15*u1^5 + t2*t3^2*t10*u0^13*u1^7 + 
2*t2*t3*t4*t5*u0^14*u1^5 + 2*t2*t3*t4*t6*u0^16*u1^4 + 2*t2*t3*t4*t7*u0^15*u1^5 +
2*t2*t3*t4*t8*u0^14*u1^6 + 2*t2*t3*t4*t9*u0^16*u1^5 + 2*t2*t3*t4*t10*u0^14*u1^7 
+ 3*t2*t3*u0^16 - 3*t2*t3*u0^13*u1^2 + t2*t4^2*t5*u0^15*u1^5 + 
t2*t4^2*t6*u0^17*u1^4 + t2*t4^2*t7*u0^16*u1^5 + t2*t4^2*t8*u0^15*u1^6 + 
t2*t4^2*t9*u0^17*u1^5 + t2*t4^2*t10*u0^15*u1^7 + 3*t2*t4*u0^17 - 
3*t2*t4*u0^14*u1^2 + t3^3*u0^22 + 3*t3^2*t4*u0^23 - t3^2*t5^2*u0^3*u1^10 + 
t3^2*t5^2*u1^12 - 2*t3^2*t5*t6*u0^5*u1^9 + 2*t3^2*t5*t6*u0^2*u1^11 - 
2*t3^2*t5*t7*u0^4*u1^10 + 2*t3^2*t5*t7*u0*u1^12 - 2*t3^2*t5*t8*u0^3*u1^11 + 
2*t3^2*t5*t8*u1^13 - 2*t3^2*t5*t9*u0^5*u1^10 + 2*t3^2*t5*t9*u0^2*u1^12 - 
2*t3^2*t5*t10*u0^3*u1^12 + 2*t3^2*t5*t10*u1^14 - t3^2*t6^2*u0^7*u1^8 + 
t3^2*t6^2*u0^4*u1^10 - 2*t3^2*t6*t7*u0^6*u1^9 + 2*t3^2*t6*t7*u0^3*u1^11 - 
2*t3^2*t6*t8*u0^5*u1^10 + 2*t3^2*t6*t8*u0^2*u1^12 - 2*t3^2*t6*t9*u0^7*u1^9 + 
2*t3^2*t6*t9*u0^4*u1^11 - 2*t3^2*t6*t10*u0^5*u1^11 + 2*t3^2*t6*t10*u0^2*u1^13 - 
t3^2*t7^2*u0^5*u1^10 + t3^2*t7^2*u0^2*u1^12 - 2*t3^2*t7*t8*u0^4*u1^11 + 
2*t3^2*t7*t8*u0*u1^13 - 2*t3^2*t7*t9*u0^6*u1^10 + 2*t3^2*t7*t9*u0^3*u1^12 - 
2*t3^2*t7*t10*u0^4*u1^12 + 2*t3^2*t7*t10*u0*u1^14 - t3^2*t8^2*u0^3*u1^12 + 
t3^2*t8^2*u1^14 - 2*t3^2*t8*t9*u0^5*u1^11 + 2*t3^2*t8*t9*u0^2*u1^13 - 
2*t3^2*t8*t10*u0^3*u1^13 + 2*t3^2*t8*t10*u1^15 - t3^2*t9^2*u0^7*u1^10 + 
t3^2*t9^2*u0^4*u1^12 - 2*t3^2*t9*t10*u0^5*u1^12 + 2*t3^2*t9*t10*u0^2*u1^14 - 
t3^2*t10^2*u0^3*u1^14 + t3^2*t10^2*u1^16 + 3*t3*t4^2*u0^24 - 
2*t3*t4*t5^2*u0^4*u1^10 + 2*t3*t4*t5^2*u0*u1^12 - 4*t3*t4*t5*t6*u0^6*u1^9 + 
4*t3*t4*t5*t6*u0^3*u1^11 - 4*t3*t4*t5*t7*u0^5*u1^10 + 4*t3*t4*t5*t7*u0^2*u1^12 -
4*t3*t4*t5*t8*u0^4*u1^11 + 4*t3*t4*t5*t8*u0*u1^13 - 4*t3*t4*t5*t9*u0^6*u1^10 + 
4*t3*t4*t5*t9*u0^3*u1^12 - 4*t3*t4*t5*t10*u0^4*u1^12 + 4*t3*t4*t5*t10*u0*u1^14 -
2*t3*t4*t6^2*u0^8*u1^8 + 2*t3*t4*t6^2*u0^5*u1^10 - 4*t3*t4*t6*t7*u0^7*u1^9 + 
4*t3*t4*t6*t7*u0^4*u1^11 - 4*t3*t4*t6*t8*u0^6*u1^10 + 4*t3*t4*t6*t8*u0^3*u1^12 -
4*t3*t4*t6*t9*u0^8*u1^9 + 4*t3*t4*t6*t9*u0^5*u1^11 - 4*t3*t4*t6*t10*u0^6*u1^11 +
4*t3*t4*t6*t10*u0^3*u1^13 - 2*t3*t4*t7^2*u0^6*u1^10 + 2*t3*t4*t7^2*u0^3*u1^12 - 
4*t3*t4*t7*t8*u0^5*u1^11 + 4*t3*t4*t7*t8*u0^2*u1^13 - 4*t3*t4*t7*t9*u0^7*u1^10 +
4*t3*t4*t7*t9*u0^4*u1^12 - 4*t3*t4*t7*t10*u0^5*u1^12 + 4*t3*t4*t7*t10*u0^2*u1^14
- 2*t3*t4*t8^2*u0^4*u1^12 + 2*t3*t4*t8^2*u0*u1^14 - 4*t3*t4*t8*t9*u0^6*u1^11 + 
4*t3*t4*t8*t9*u0^3*u1^13 - 4*t3*t4*t8*t10*u0^4*u1^13 + 4*t3*t4*t8*t10*u0*u1^15 -
2*t3*t4*t9^2*u0^8*u1^10 + 2*t3*t4*t9^2*u0^5*u1^12 - 4*t3*t4*t9*t10*u0^6*u1^12 + 
4*t3*t4*t9*t10*u0^3*u1^14 - 2*t3*t4*t10^2*u0^4*u1^14 + 2*t3*t4*t10^2*u0*u1^16 - 
2*t3*t5*u0^6*u1^5 + 4*t3*t5*u0^3*u1^7 - 2*t3*t5*u1^9 - 2*t3*t6*u0^8*u1^4 + 
4*t3*t6*u0^5*u1^6 - 2*t3*t6*u0^2*u1^8 - 2*t3*t7*u0^7*u1^5 + 4*t3*t7*u0^4*u1^7 - 
2*t3*t7*u0*u1^9 - 2*t3*t8*u0^6*u1^6 + 4*t3*t8*u0^3*u1^8 - 2*t3*t8*u1^10 - 
2*t3*t9*u0^8*u1^5 + 4*t3*t9*u0^5*u1^7 - 2*t3*t9*u0^2*u1^9 - 2*t3*t10*u0^6*u1^7 +
4*t3*t10*u0^3*u1^9 - 2*t3*t10*u1^11 + t4^3*u0^25 - t4^2*t5^2*u0^5*u1^10 + 
t4^2*t5^2*u0^2*u1^12 - 2*t4^2*t5*t6*u0^7*u1^9 + 2*t4^2*t5*t6*u0^4*u1^11 - 
2*t4^2*t5*t7*u0^6*u1^10 + 2*t4^2*t5*t7*u0^3*u1^12 - 2*t4^2*t5*t8*u0^5*u1^11 + 
2*t4^2*t5*t8*u0^2*u1^13 - 2*t4^2*t5*t9*u0^7*u1^10 + 2*t4^2*t5*t9*u0^4*u1^12 - 
2*t4^2*t5*t10*u0^5*u1^12 + 2*t4^2*t5*t10*u0^2*u1^14 - t4^2*t6^2*u0^9*u1^8 + 
t4^2*t6^2*u0^6*u1^10 - 2*t4^2*t6*t7*u0^8*u1^9 + 2*t4^2*t6*t7*u0^5*u1^11 - 
2*t4^2*t6*t8*u0^7*u1^10 + 2*t4^2*t6*t8*u0^4*u1^12 - 2*t4^2*t6*t9*u0^9*u1^9 + 
2*t4^2*t6*t9*u0^6*u1^11 - 2*t4^2*t6*t10*u0^7*u1^11 + 2*t4^2*t6*t10*u0^4*u1^13 - 
t4^2*t7^2*u0^7*u1^10 + t4^2*t7^2*u0^4*u1^12 - 2*t4^2*t7*t8*u0^6*u1^11 + 
2*t4^2*t7*t8*u0^3*u1^13 - 2*t4^2*t7*t9*u0^8*u1^10 + 2*t4^2*t7*t9*u0^5*u1^12 - 
2*t4^2*t7*t10*u0^6*u1^12 + 2*t4^2*t7*t10*u0^3*u1^14 - t4^2*t8^2*u0^5*u1^12 + 
t4^2*t8^2*u0^2*u1^14 - 2*t4^2*t8*t9*u0^7*u1^11 + 2*t4^2*t8*t9*u0^4*u1^13 - 
2*t4^2*t8*t10*u0^5*u1^13 + 2*t4^2*t8*t10*u0^2*u1^15 - t4^2*t9^2*u0^9*u1^10 + 
t4^2*t9^2*u0^6*u1^12 - 2*t4^2*t9*t10*u0^7*u1^12 + 2*t4^2*t9*t10*u0^4*u1^14 - 
t4^2*t10^2*u0^5*u1^14 + t4^2*t10^2*u0^2*u1^16 - 2*t4*t5*u0^7*u1^5 + 
4*t4*t5*u0^4*u1^7 - 2*t4*t5*u0*u1^9 - 2*t4*t6*u0^9*u1^4 + 4*t4*t6*u0^6*u1^6 - 
2*t4*t6*u0^3*u1^8 - 2*t4*t7*u0^8*u1^5 + 4*t4*t7*u0^5*u1^7 - 2*t4*t7*u0^2*u1^9 - 
2*t4*t8*u0^7*u1^6 + 4*t4*t8*u0^4*u1^8 - 2*t4*t8*u0*u1^10 - 2*t4*t9*u0^9*u1^5 + 
4*t4*t9*u0^6*u1^7 - 2*t4*t9*u0^3*u1^9 - 2*t4*t10*u0^7*u1^7 + 4*t4*t10*u0^4*u1^9 
- 2*t4*t10*u0*u1^11 - u0^9 + 3*u0^6*u1^2 - 3*u0^3*u1^4 + u1^6


f = x^9 - t0^3*x^11 - 3*t0^2*t1*x^12 + (-3*t0^2*t2 - 3*t0*t1^2)*x^13 + 
(-6*t0*t1*t2 - 3*t0*t3 - t1^3)*x^14 + (-3*t0*t2^2 - 3*t0*t4 - 3*t1^2*t2 - 
3*t1*t3)*x^15 + (-3*t1*t2^2 - 3*t1*t4 - 3*t2*t3)*x^16 + (-t2^3 - 3*t2*t4)*x^17 -
t3^3*x^22 - 3*t3^2*t4*x^23 - 3*t3*t4^2*x^24 - t4^3*x^25 - 3*x^6*y^2 + 
3*t0*t3*x^11*y^2 + (3*t0*t4 + 3*t1*t3)*x^12*y^2 + (3*t1*t4 + 3*t2*t3)*x^13*y^2 +
3*t2*t4*x^14*y^2 + 3*x^3*y^4 + t0^2*t6*x^5*y^4 + 2*t0*t1*t6*x^6*y^4 + 
(2*t0*t2*t6 + t1^2*t6)*x^7*y^4 + (2*t1*t2*t6 + 2*t3*t6)*x^8*y^4 + (t2^2*t6 + 
2*t4*t6)*x^9*y^4 - t0*t3^2*t6*x^13*y^4 + (-2*t0*t3*t4*t6 - t1*t3^2*t6)*x^14*y^4 
+ (-t0*t4^2*t6 - 2*t1*t3*t4*t6 - t2*t3^2*t6)*x^15*y^4 + (-t1*t4^2*t6 - 
2*t2*t3*t4*t6)*x^16*y^4 - t2*t4^2*t6*x^17*y^4 + t0^2*t5*x^3*y^5 + (t0^2*t7 + 
2*t0*t1*t5)*x^4*y^5 + (t0^2*t9 + 2*t0*t1*t7 + 2*t0*t2*t5 + t1^2*t5)*x^5*y^5 + 
(2*t0*t1*t9 + 2*t0*t2*t7 + t1^2*t7 + 2*t1*t2*t5 + 2*t3*t5)*x^6*y^5 + (2*t0*t2*t9
+ t1^2*t9 + 2*t1*t2*t7 + t2^2*t5 + 2*t3*t7 + 2*t4*t5)*x^7*y^5 + (2*t1*t2*t9 + 
t2^2*t7 + 2*t3*t9 + 2*t4*t7)*x^8*y^5 + (t2^2*t9 + 2*t4*t9)*x^9*y^5 - 
t0*t3^2*t5*x^11*y^5 + (-t0*t3^2*t7 - 2*t0*t3*t4*t5 - t1*t3^2*t5)*x^12*y^5 + 
(-t0*t3^2*t9 - 2*t0*t3*t4*t7 - t0*t4^2*t5 - t1*t3^2*t7 - 2*t1*t3*t4*t5 - 
t2*t3^2*t5)*x^13*y^5 + (-2*t0*t3*t4*t9 - t0*t4^2*t7 - t1*t3^2*t9 - 2*t1*t3*t4*t7
- t1*t4^2*t5 - t2*t3^2*t7 - 2*t2*t3*t4*t5)*x^14*y^5 + (-t0*t4^2*t9 - 
2*t1*t3*t4*t9 - t1*t4^2*t7 - t2*t3^2*t9 - 2*t2*t3*t4*t7 - t2*t4^2*t5)*x^15*y^5 +
(-t1*t4^2*t9 - 2*t2*t3*t4*t9 - t2*t4^2*t7)*x^16*y^5 - t2*t4^2*t9*x^17*y^5 - y^6 
- t0^2*t6*x^2*y^6 + (t0^2*t8 - 2*t0*t1*t6)*x^3*y^6 + (2*t0*t1*t8 - 2*t0*t2*t6 - 
t1^2*t6)*x^4*y^6 + (2*t0*t2*t8 + t1^2*t8 - 2*t1*t2*t6 - 4*t3*t6)*x^5*y^6 + 
(2*t1*t2*t8 - t2^2*t6 + 2*t3*t8 - 4*t4*t6)*x^6*y^6 + (t2^2*t8 + 2*t4*t8)*x^7*y^6
- t0*t3^2*t8*x^11*y^6 + (-2*t0*t3*t4*t8 - t1*t3^2*t8)*x^12*y^6 + (-t0*t4^2*t8 - 
2*t1*t3*t4*t8 - t2*t3^2*t8)*x^13*y^6 + (-t1*t4^2*t8 - 2*t2*t3*t4*t8)*x^14*y^6 - 
t2*t4^2*t8*x^15*y^6 - t0^2*t5*y^7 + (-t0^2*t7 - 2*t0*t1*t5)*x*y^7 + (-t0^2*t9 - 
2*t0*t1*t7 - 2*t0*t2*t5 - t1^2*t5)*x^2*y^7 + (t0^2*t10 - 2*t0*t1*t9 - 2*t0*t2*t7
- t1^2*t7 - 2*t1*t2*t5 - 4*t3*t5)*x^3*y^7 + (2*t0*t1*t10 - 2*t0*t2*t9 - t1^2*t9 
- 2*t1*t2*t7 - t2^2*t5 - 4*t3*t7 - 4*t4*t5)*x^4*y^7 + (2*t0*t2*t10 + t1^2*t10 - 
2*t1*t2*t9 - t2^2*t7 - 4*t3*t9 - 4*t4*t7)*x^5*y^7 + (2*t1*t2*t10 - t2^2*t9 + 
2*t3*t10 - 4*t4*t9)*x^6*y^7 + (t2^2*t10 + 2*t4*t10)*x^7*y^7 - 
t0*t3^2*t10*x^11*y^7 + (-2*t0*t3*t4*t10 - t1*t3^2*t10)*x^12*y^7 + (-t0*t4^2*t10 
- 2*t1*t3*t4*t10 - t2*t3^2*t10)*x^13*y^7 + (-t1*t4^2*t10 - 
2*t2*t3*t4*t10)*x^14*y^7 - t2*t4^2*t10*x^15*y^7 - t0^2*t8*y^8 - 2*t0*t1*t8*x*y^8
+ (-2*t0*t2*t8 - t1^2*t8 + 2*t3*t6)*x^2*y^8 + (-2*t1*t2*t8 - 4*t3*t8 + 
2*t4*t6)*x^3*y^8 + (-t2^2*t8 - 4*t4*t8)*x^4*y^8 + t3^2*t6^2*x^7*y^8 + 
2*t3*t4*t6^2*x^8*y^8 + t4^2*t6^2*x^9*y^8 + (-t0^2*t10 + 2*t3*t5)*y^9 + 
(-2*t0*t1*t10 + 2*t3*t7 + 2*t4*t5)*x*y^9 + (-2*t0*t2*t10 - t1^2*t10 + 2*t3*t9 + 
2*t4*t7)*x^2*y^9 + (-2*t1*t2*t10 - 4*t3*t10 + 2*t4*t9)*x^3*y^9 + (-t2^2*t10 - 
4*t4*t10)*x^4*y^9 + 2*t3^2*t5*t6*x^5*y^9 + (2*t3^2*t6*t7 + 
4*t3*t4*t5*t6)*x^6*y^9 + (2*t3^2*t6*t9 + 4*t3*t4*t6*t7 + 2*t4^2*t5*t6)*x^7*y^9 +
(4*t3*t4*t6*t9 + 2*t4^2*t6*t7)*x^8*y^9 + 2*t4^2*t6*t9*x^9*y^9 + 2*t3*t8*y^10 + 
2*t4*t8*x*y^10 + t3^2*t5^2*x^3*y^10 + (2*t3^2*t5*t7 - t3^2*t6^2 + 
2*t3*t4*t5^2)*x^4*y^10 + (2*t3^2*t5*t9 + 2*t3^2*t6*t8 + t3^2*t7^2 + 
4*t3*t4*t5*t7 - 2*t3*t4*t6^2 + t4^2*t5^2)*x^5*y^10 + (2*t3^2*t7*t9 + 
4*t3*t4*t5*t9 + 4*t3*t4*t6*t8 + 2*t3*t4*t7^2 + 2*t4^2*t5*t7 - 
t4^2*t6^2)*x^6*y^10 + (t3^2*t9^2 + 4*t3*t4*t7*t9 + 2*t4^2*t5*t9 + 2*t4^2*t6*t8 +
t4^2*t7^2)*x^7*y^10 + (2*t3*t4*t9^2 + 2*t4^2*t7*t9)*x^8*y^10 + 
t4^2*t9^2*x^9*y^10 + 2*t3*t10*y^11 + 2*t4*t10*x*y^11 - 2*t3^2*t5*t6*x^2*y^11 + 
(2*t3^2*t5*t8 - 2*t3^2*t6*t7 - 4*t3*t4*t5*t6)*x^3*y^11 + (-2*t3^2*t6*t9 + 
2*t3^2*t7*t8 + 4*t3*t4*t5*t8 - 4*t3*t4*t6*t7 - 2*t4^2*t5*t6)*x^4*y^11 + 
(2*t3^2*t6*t10 + 2*t3^2*t8*t9 - 4*t3*t4*t6*t9 + 4*t3*t4*t7*t8 + 2*t4^2*t5*t8 - 
2*t4^2*t6*t7)*x^5*y^11 + (4*t3*t4*t6*t10 + 4*t3*t4*t8*t9 - 2*t4^2*t6*t9 + 
2*t4^2*t7*t8)*x^6*y^11 + (2*t4^2*t6*t10 + 2*t4^2*t8*t9)*x^7*y^11 - 
t3^2*t5^2*y^12 + (-2*t3^2*t5*t7 - 2*t3*t4*t5^2)*x*y^12 + (-2*t3^2*t5*t9 - 
2*t3^2*t6*t8 - t3^2*t7^2 - 4*t3*t4*t5*t7 - t4^2*t5^2)*x^2*y^12 + (2*t3^2*t5*t10 
- 2*t3^2*t7*t9 + t3^2*t8^2 - 4*t3*t4*t5*t9 - 4*t3*t4*t6*t8 - 2*t3*t4*t7^2 - 
2*t4^2*t5*t7)*x^3*y^12 + (2*t3^2*t7*t10 - t3^2*t9^2 + 4*t3*t4*t5*t10 - 
4*t3*t4*t7*t9 + 2*t3*t4*t8^2 - 2*t4^2*t5*t9 - 2*t4^2*t6*t8 - t4^2*t7^2)*x^4*y^12
+ (2*t3^2*t9*t10 + 4*t3*t4*t7*t10 - 2*t3*t4*t9^2 + 2*t4^2*t5*t10 - 2*t4^2*t7*t9 
+ t4^2*t8^2)*x^5*y^12 + (4*t3*t4*t9*t10 + 2*t4^2*t7*t10 - t4^2*t9^2)*x^6*y^12 + 
2*t4^2*t9*t10*x^7*y^12 - 2*t3^2*t5*t8*y^13 + (-2*t3^2*t7*t8 - 
4*t3*t4*t5*t8)*x*y^13 + (-2*t3^2*t6*t10 - 2*t3^2*t8*t9 - 4*t3*t4*t7*t8 - 
2*t4^2*t5*t8)*x^2*y^13 + (2*t3^2*t8*t10 - 4*t3*t4*t6*t10 - 4*t3*t4*t8*t9 - 
2*t4^2*t7*t8)*x^3*y^13 + (4*t3*t4*t8*t10 - 2*t4^2*t6*t10 - 
2*t4^2*t8*t9)*x^4*y^13 + 2*t4^2*t8*t10*x^5*y^13 + (-2*t3^2*t5*t10 - 
t3^2*t8^2)*y^14 + (-2*t3^2*t7*t10 - 4*t3*t4*t5*t10 - 2*t3*t4*t8^2)*x*y^14 + 
(-2*t3^2*t9*t10 - 4*t3*t4*t7*t10 - 2*t4^2*t5*t10 - t4^2*t8^2)*x^2*y^14 + 
(t3^2*t10^2 - 4*t3*t4*t9*t10 - 2*t4^2*t7*t10)*x^3*y^14 + (2*t3*t4*t10^2 - 
2*t4^2*t9*t10)*x^4*y^14 + t4^2*t10^2*x^5*y^14 - 2*t3^2*t8*t10*y^15 - 
4*t3*t4*t8*t10*x*y^15 - 2*t4^2*t8*t10*x^2*y^15 - t3^2*t10^2*y^16 - 
2*t3*t4*t10^2*x*y^16 - t4^2*t10^2*x^2*y^16
MaxContactElements = [
x,
y,
-x^3 + y^2
]

Curve: 6-9-22

f = x^9 - t0^3*x^11 - 3*t0^2*t1*x^12 + (-3*t0^2*t2 - 3*t0*t1^2)*x^13 + 
(-6*t0*t1*t2 - 3*t0*t3 - t1^3)*x^14 + (-3*t0*t2^2 - 3*t0*t4 - 3*t1^2*t2 - 
3*t1*t3)*x^15 + (-3*t1*t2^2 - 3*t1*t4 - 3*t2*t3)*x^16 + (-t2^3 - 3*t2*t4)*x^17 -
t3^3*x^22 - 3*t3^2*t4*x^23 - 3*t3*t4^2*x^24 - t4^3*x^25 - 3*x^6*y^2 + 
3*t0*t3*x^11*y^2 + (3*t0*t4 + 3*t1*t3)*x^12*y^2 + (3*t1*t4 + 3*t2*t3)*x^13*y^2 +
3*t2*t4*x^14*y^2 + 3*x^3*y^4 + t0^2*t6*x^5*y^4 + 2*t0*t1*t6*x^6*y^4 + 
(2*t0*t2*t6 + t1^2*t6)*x^7*y^4 + (2*t1*t2*t6 + 2*t3*t6)*x^8*y^4 + (t2^2*t6 + 
2*t4*t6)*x^9*y^4 - t0*t3^2*t6*x^13*y^4 + (-2*t0*t3*t4*t6 - t1*t3^2*t6)*x^14*y^4 
+ (-t0*t4^2*t6 - 2*t1*t3*t4*t6 - t2*t3^2*t6)*x^15*y^4 + (-t1*t4^2*t6 - 
2*t2*t3*t4*t6)*x^16*y^4 - t2*t4^2*t6*x^17*y^4 + t0^2*t5*x^3*y^5 + (t0^2*t7 + 
2*t0*t1*t5)*x^4*y^5 + (t0^2*t9 + 2*t0*t1*t7 + 2*t0*t2*t5 + t1^2*t5)*x^5*y^5 + 
(2*t0*t1*t9 + 2*t0*t2*t7 + t1^2*t7 + 2*t1*t2*t5 + 2*t3*t5)*x^6*y^5 + (2*t0*t2*t9
+ t1^2*t9 + 2*t1*t2*t7 + t2^2*t5 + 2*t3*t7 + 2*t4*t5)*x^7*y^5 + (2*t1*t2*t9 + 
t2^2*t7 + 2*t3*t9 + 2*t4*t7)*x^8*y^5 + (t2^2*t9 + 2*t4*t9)*x^9*y^5 - 
t0*t3^2*t5*x^11*y^5 + (-t0*t3^2*t7 - 2*t0*t3*t4*t5 - t1*t3^2*t5)*x^12*y^5 + 
(-t0*t3^2*t9 - 2*t0*t3*t4*t7 - t0*t4^2*t5 - t1*t3^2*t7 - 2*t1*t3*t4*t5 - 
t2*t3^2*t5)*x^13*y^5 + (-2*t0*t3*t4*t9 - t0*t4^2*t7 - t1*t3^2*t9 - 2*t1*t3*t4*t7
- t1*t4^2*t5 - t2*t3^2*t7 - 2*t2*t3*t4*t5)*x^14*y^5 + (-t0*t4^2*t9 - 
2*t1*t3*t4*t9 - t1*t4^2*t7 - t2*t3^2*t9 - 2*t2*t3*t4*t7 - t2*t4^2*t5)*x^15*y^5 +
(-t1*t4^2*t9 - 2*t2*t3*t4*t9 - t2*t4^2*t7)*x^16*y^5 - t2*t4^2*t9*x^17*y^5 - y^6 
- t0^2*t6*x^2*y^6 + (t0^2*t8 - 2*t0*t1*t6)*x^3*y^6 + (2*t0*t1*t8 - 2*t0*t2*t6 - 
t1^2*t6)*x^4*y^6 + (2*t0*t2*t8 + t1^2*t8 - 2*t1*t2*t6 - 4*t3*t6)*x^5*y^6 + 
(2*t1*t2*t8 - t2^2*t6 + 2*t3*t8 - 4*t4*t6)*x^6*y^6 + (t2^2*t8 + 2*t4*t8)*x^7*y^6
- t0*t3^2*t8*x^11*y^6 + (-2*t0*t3*t4*t8 - t1*t3^2*t8)*x^12*y^6 + (-t0*t4^2*t8 - 
2*t1*t3*t4*t8 - t2*t3^2*t8)*x^13*y^6 + (-t1*t4^2*t8 - 2*t2*t3*t4*t8)*x^14*y^6 - 
t2*t4^2*t8*x^15*y^6 - t0^2*t5*y^7 + (-t0^2*t7 - 2*t0*t1*t5)*x*y^7 + (-t0^2*t9 - 
2*t0*t1*t7 - 2*t0*t2*t5 - t1^2*t5)*x^2*y^7 + (t0^2*t10 - 2*t0*t1*t9 - 2*t0*t2*t7
- t1^2*t7 - 2*t1*t2*t5 - 4*t3*t5)*x^3*y^7 + (2*t0*t1*t10 - 2*t0*t2*t9 - t1^2*t9 
- 2*t1*t2*t7 - t2^2*t5 - 4*t3*t7 - 4*t4*t5)*x^4*y^7 + (2*t0*t2*t10 + t1^2*t10 - 
2*t1*t2*t9 - t2^2*t7 - 4*t3*t9 - 4*t4*t7)*x^5*y^7 + (2*t1*t2*t10 - t2^2*t9 + 
2*t3*t10 - 4*t4*t9)*x^6*y^7 + (t2^2*t10 + 2*t4*t10)*x^7*y^7 - 
t0*t3^2*t10*x^11*y^7 + (-2*t0*t3*t4*t10 - t1*t3^2*t10)*x^12*y^7 + (-t0*t4^2*t10 
- 2*t1*t3*t4*t10 - t2*t3^2*t10)*x^13*y^7 + (-t1*t4^2*t10 - 
2*t2*t3*t4*t10)*x^14*y^7 - t2*t4^2*t10*x^15*y^7 - t0^2*t8*y^8 - 2*t0*t1*t8*x*y^8
+ (-2*t0*t2*t8 - t1^2*t8 + 2*t3*t6)*x^2*y^8 + (-2*t1*t2*t8 - 4*t3*t8 + 
2*t4*t6)*x^3*y^8 + (-t2^2*t8 - 4*t4*t8)*x^4*y^8 + t3^2*t6^2*x^7*y^8 + 
2*t3*t4*t6^2*x^8*y^8 + t4^2*t6^2*x^9*y^8 + (-t0^2*t10 + 2*t3*t5)*y^9 + 
(-2*t0*t1*t10 + 2*t3*t7 + 2*t4*t5)*x*y^9 + (-2*t0*t2*t10 - t1^2*t10 + 2*t3*t9 + 
2*t4*t7)*x^2*y^9 + (-2*t1*t2*t10 - 4*t3*t10 + 2*t4*t9)*x^3*y^9 + (-t2^2*t10 - 
4*t4*t10)*x^4*y^9 + 2*t3^2*t5*t6*x^5*y^9 + (2*t3^2*t6*t7 + 
4*t3*t4*t5*t6)*x^6*y^9 + (2*t3^2*t6*t9 + 4*t3*t4*t6*t7 + 2*t4^2*t5*t6)*x^7*y^9 +
(4*t3*t4*t6*t9 + 2*t4^2*t6*t7)*x^8*y^9 + 2*t4^2*t6*t9*x^9*y^9 + 2*t3*t8*y^10 + 
2*t4*t8*x*y^10 + t3^2*t5^2*x^3*y^10 + (2*t3^2*t5*t7 - t3^2*t6^2 + 
2*t3*t4*t5^2)*x^4*y^10 + (2*t3^2*t5*t9 + 2*t3^2*t6*t8 + t3^2*t7^2 + 
4*t3*t4*t5*t7 - 2*t3*t4*t6^2 + t4^2*t5^2)*x^5*y^10 + (2*t3^2*t7*t9 + 
4*t3*t4*t5*t9 + 4*t3*t4*t6*t8 + 2*t3*t4*t7^2 + 2*t4^2*t5*t7 - 
t4^2*t6^2)*x^6*y^10 + (t3^2*t9^2 + 4*t3*t4*t7*t9 + 2*t4^2*t5*t9 + 2*t4^2*t6*t8 +
t4^2*t7^2)*x^7*y^10 + (2*t3*t4*t9^2 + 2*t4^2*t7*t9)*x^8*y^10 + 
t4^2*t9^2*x^9*y^10 + 2*t3*t10*y^11 + 2*t4*t10*x*y^11 - 2*t3^2*t5*t6*x^2*y^11 + 
(2*t3^2*t5*t8 - 2*t3^2*t6*t7 - 4*t3*t4*t5*t6)*x^3*y^11 + (-2*t3^2*t6*t9 + 
2*t3^2*t7*t8 + 4*t3*t4*t5*t8 - 4*t3*t4*t6*t7 - 2*t4^2*t5*t6)*x^4*y^11 + 
(2*t3^2*t6*t10 + 2*t3^2*t8*t9 - 4*t3*t4*t6*t9 + 4*t3*t4*t7*t8 + 2*t4^2*t5*t8 - 
2*t4^2*t6*t7)*x^5*y^11 + (4*t3*t4*t6*t10 + 4*t3*t4*t8*t9 - 2*t4^2*t6*t9 + 
2*t4^2*t7*t8)*x^6*y^11 + (2*t4^2*t6*t10 + 2*t4^2*t8*t9)*x^7*y^11 - 
t3^2*t5^2*y^12 + (-2*t3^2*t5*t7 - 2*t3*t4*t5^2)*x*y^12 + (-2*t3^2*t5*t9 - 
2*t3^2*t6*t8 - t3^2*t7^2 - 4*t3*t4*t5*t7 - t4^2*t5^2)*x^2*y^12 + (2*t3^2*t5*t10 
- 2*t3^2*t7*t9 + t3^2*t8^2 - 4*t3*t4*t5*t9 - 4*t3*t4*t6*t8 - 2*t3*t4*t7^2 - 
2*t4^2*t5*t7)*x^3*y^12 + (2*t3^2*t7*t10 - t3^2*t9^2 + 4*t3*t4*t5*t10 - 
4*t3*t4*t7*t9 + 2*t3*t4*t8^2 - 2*t4^2*t5*t9 - 2*t4^2*t6*t8 - t4^2*t7^2)*x^4*y^12
+ (2*t3^2*t9*t10 + 4*t3*t4*t7*t10 - 2*t3*t4*t9^2 + 2*t4^2*t5*t10 - 2*t4^2*t7*t9 
+ t4^2*t8^2)*x^5*y^12 + (4*t3*t4*t9*t10 + 2*t4^2*t7*t10 - t4^2*t9^2)*x^6*y^12 + 
2*t4^2*t9*t10*x^7*y^12 - 2*t3^2*t5*t8*y^13 + (-2*t3^2*t7*t8 - 
4*t3*t4*t5*t8)*x*y^13 + (-2*t3^2*t6*t10 - 2*t3^2*t8*t9 - 4*t3*t4*t7*t8 - 
2*t4^2*t5*t8)*x^2*y^13 + (2*t3^2*t8*t10 - 4*t3*t4*t6*t10 - 4*t3*t4*t8*t9 - 
2*t4^2*t7*t8)*x^3*y^13 + (4*t3*t4*t8*t10 - 2*t4^2*t6*t10 - 
2*t4^2*t8*t9)*x^4*y^13 + 2*t4^2*t8*t10*x^5*y^13 + (-2*t3^2*t5*t10 - 
t3^2*t8^2)*y^14 + (-2*t3^2*t7*t10 - 4*t3*t4*t5*t10 - 2*t3*t4*t8^2)*x*y^14 + 
(-2*t3^2*t9*t10 - 4*t3*t4*t7*t10 - 2*t4^2*t5*t10 - t4^2*t8^2)*x^2*y^14 + 
(t3^2*t10^2 - 4*t3*t4*t9*t10 - 2*t4^2*t7*t10)*x^3*y^14 + (2*t3*t4*t10^2 - 
2*t4^2*t9*t10)*x^4*y^14 + t4^2*t10^2*x^5*y^14 - 2*t3^2*t8*t10*y^15 - 
4*t3*t4*t8*t10*x*y^15 - 2*t4^2*t8*t10*x^2*y^15 - t3^2*t10^2*y^16 - 
2*t3*t4*t10^2*x*y^16 - t4^2*t10^2*x^2*y^16


-----------------------------------------------------------------------
Divisor E_1
nus = []

-----------------------------------------------------------------------
ZetaFunctionResidue

-----------------------------------------------------------------------
Center singular point
lambda = 1

-----------------------------------------------------------------------
Divisor E_2
nus = [ 1, 4, 7, 10, 13, 16, 19 ]

-----------------------------------------------------------------------
ZetaFunctionResidue
 nu  │     sigma_{2,nu}     │ residue=0 => sigma NOT root & (sigma-1) root
─────┼──────────────────────┼──────────────────────────
   1 │  -20/66   =   -10/33 ─ 
                                (t5)
   4 │  -23/66   =   -23/66 ─ 
                                (63888*t0 + 1295*t5^4 - 40656*t6)
   7 │  -26/66   =   -13/33 ┬ 
                                (t7)
     │                      └
                                (t5)
  10 │  -29/66   =   -29/66 ┬ 
                                (11*t0 - 5*t6)
     │                      │
                                (t6) or 
                                (11*t1 - 5*t8)
     │                      └
                                (t5)
  13 │  -32/66   =   -16/33 ┬ 
                                (t9)
     │                      │
                                (t7)
     │                      │
                                (t5)
     │                      └
                                (t6)
  16 │  -35/66   =   -35/66 ┬ 
                                (11*t0 - 3*t6)
     │                      │
                                (t6) or 
                                (11*t1 - 3*t8)
     │                      │
                                (t6) or 
                                (19965*t2 + 52*t6^4)
     │                      │
                                (t5)
     │                      └
                                (t7) or 
                                (t6)
  19 │  -38/66   =   -19/33 ┬ 
                                (t10)
     │                      │
                                (t9)
     │                      │
                                (t7)
     │                      │
                                (t8)
     │                      │
                                (t5)
     │                      └
                                (t6)

